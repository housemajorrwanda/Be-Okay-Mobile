import React, { useState } from "react";
import {
  View,
  Text,
  StyleSheet,
  Image,
  ScrollView,
  TouchableOpacity,
} from "react-native";
import { Ionicons, MaterialIcons } from "@expo/vector-icons";
const ConsultationTypeResult = () => {
  const consultationOptions = [
    {
      name: "Dr. Emile",
      description:
        "Automated consultation generated by system. that is accurate 98%...",
      price: "3,500 Rwf",
      icon: require("../assets/eos-icons_machine-learning.png"),
    },
    {
      name: "Real-time",
      description:
        "Talk with doctor immediately by phone call, text and scheduled",
      price: "7,500 Rwf",
      icon: require("../assets/Vector.png"),
    },
    {
      name: "Physical appointment",
      description: "Our doctors can schedule appointment with you, how you...",
      price: "10,500 Rwf",
      icon: require("../assets/material-symbols_location-away.png"),
    },
  ];

  return (
    <View style={styles.container}>
      <ScrollView contentContainerStyle={styles.scrollContainer}>
        <View>
          <View style={styles.header}>
            <View>
              <Image
                source={require("../assets/profileImage.png")}
                style={styles.profileImage}
              />
              <View style={styles.activeIcon} />
            </View>
            <View style={styles.profileDetails}>
              <Text style={styles.profileName}>NGOGA Innocent</Text>
              <Text style={styles.secondName}>Patrick</Text>
            </View>
            <View style={styles.headerIcons}>
              <Ionicons
                name="chatbubble-ellipses-outline"
                size={30}
                color="white"
              />
              <Ionicons name="notifications-sharp" size={30} color="white" />
            </View>
          </View>

          <View style={styles.AddressConsultationContainer}>
            <Text style={styles.AdressyourConsultation}>
              Address your Consultation
            </Text>
            <View style={styles.ConsultationContainer}>
              <TouchableOpacity style={styles.adressCategory}>
                <Text
                  style={[
                    styles.adressCategoryText,
                    styles.selectedCategoryText,
                  ]}
                >
                  Unknown
                </Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.adressCategory}>
                <Text
                  style={[
                    styles.adressCategoryText,
                    styles.selectedCategoryText,
                  ]}
                >
                  Respiratory
                </Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.adressCategory}>
                <Text
                  style={[
                    styles.adressCategoryText,
                    styles.selectedCategoryText,
                  ]}
                >
                  Head
                </Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.adressCategory}>
                <Text
                  style={[
                    styles.adressCategoryText,
                    styles.selectedCategoryText,
                  ]}
                >
                  Trunk
                </Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.adressCategory}>
                <Text
                  style={[
                    styles.adressCategoryText,
                    styles.selectedCategoryText,
                  ]}
                >
                  Left Leg
                </Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.adressCategory}>
                <Text
                  style={[
                    styles.adressCategoryText,
                    styles.selectedCategoryText,
                  ]}
                >
                  Right Leg
                </Text>
              </TouchableOpacity>
            </View>

            <TouchableOpacity style={styles.viewAllContainer}>
              <Text style={styles.viewAllContainerText}>View All</Text>
            </TouchableOpacity>
            <View>
              {consultationOptions.length > 0 ? (
                consultationOptions.map((option, index) => (
                  <View key={index} style={styles.optionContainer}>
                    <View style={styles.imageContainer}>
                    <Image source={option.icon} style={styles.optionIcon} />
                    </View>
                    <View style={styles.optionDetails}>
                      <Text style={styles.optionName}>{option.name}</Text>
                      <Text style={styles.optionDescription}>
                        {option.description}
                      </Text>
                      <Text style={styles.optionPrice}>{option.price}</Text>
                    </View>
                  </View>
                ))
              ) : (
                <Text>No consultation options available</Text>
              )}
            </View>
          </View>
        </View>
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f5f5f5",
  },
  scrollContainer: {
    paddingBottom: 60,
  },
  header: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    backgroundColor: "#93BD68",
    padding: 10,
    borderBottomLeftRadius: 8,
    borderBottomRightRadius: 8,
  },
  profileImage: {
    width: 75,
    height: 75,
    borderRadius: 25,
  },
  profileDetails: {
    display: "flex",
    width: "50%",
    justifyContent: "center",
    alignItems: "center",
  },
  profileName: {
    color: "#FFFDFD",
    fontSize: 18,
    fontWeight: "bold",
  },
  secondName: {
    color: "#FFFDFD",
    fontSize: 18,
    fontWeight: "bold",
  },
  headerIcons: {
    flexDirection: "row",
    justifyContent: "space-around",
    width: 80,
    position: "relative",
    top: 25,
  },
  activeIcon: {
    position: "absolute",
    bottom: 55,
    right: 0,
    width: 15,
    height: 15,
    borderRadius: 20,
    backgroundColor: "#18B415",
  },

  AddressConsultationContainer: {
    backgroundColor: "#FEFAFA",
    padding: 20,
    paddingTop: 0,
  },
  ConsultationContainer: {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
    paddingLeft: 20,
    marginTop: 5,
  },
  AdressyourConsultation: {
    color: "#000000",
    fontSize: 12,
    fontWeight: "regular",
  },
  adressCategory: {
    padding: 2,
    paddingRight: 0,
  },
  adressCategoryText: {
    color: "#5C5C5C",
    fontSize: 12,
    fontWeight: "regular",
  },
  viewAllContainer: {
    alignItems: "flex-end",
  },
  viewAllContainerText: {
    fontSize: 10,
    fontWeight: "regular",
    marginTop: 2,
  },

  questionText: {
    fontSize: 16,
    marginVertical: 10,
    textAlign: "center",
  },
  selectedCategoryText: {
    fontWeight: "bold",
  },
  optionContainer: {
    flexDirection: "row",
    alignItems: "center",
    marginVertical: 10,
  },
  optionIcon: {
    width: 30,
    height: 30,
    backgroundColor:"#D9F4BD"
  },
  optionDetails: {
    flex: 1,
  },
  optionName: {
    fontWeight: "bold",
    fontSize: 14,
    color: "black",
  },
  optionDescription: {
    fontSize: 12,
    color: "black",
  },
  optionPrice: {
    fontSize: 12,
    fontWeight: "bold",
    color: "#000",
  },
  imageContainer:{
    backgroundColor:"#D9F4BD",
    width:50,
    height:50,
    alignItems:"center",
    justifyContent:"center",
    marginRight:10,
    borderRadius:5
  }
});

export default ConsultationTypeResult;
